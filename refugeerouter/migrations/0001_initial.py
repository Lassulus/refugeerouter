# Generated by Django 4.0.2 on 2022-03-28 07:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('owner_first_name', models.CharField(max_length=1024)),
                ('owner_last_name', models.CharField(max_length=1024)),
                ('address', models.CharField(max_length=1024)),
                ('max_male', models.IntegerField(default=0)),
                ('max_kids', models.IntegerField(default=0)),
                ('max_adults', models.IntegerField(default=0)),
                ('min_kids_age', models.IntegerField(default=0)),
                ('max_kids_age', models.IntegerField(default=18)),
                ('is_interim', models.BooleanField(default=True)),
                ('is_pets_allowed', models.BooleanField(default=True)),
                ('is_barrier_free', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('wish_city', models.CharField(blank=True, max_length=1024)),
                ('notes', models.TextField(blank=True, max_length=1024)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Refugee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=1024)),
                ('last_name', models.CharField(blank=True, max_length=1024)),
                ('age', models.IntegerField(default=40)),
                ('need_barrier_free', models.BooleanField(default=False)),
                ('has_pets', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('D', 'Diverse'), ('F', 'Female'), ('M', 'Male'), ('U', 'Unknown')], default='U', max_length=1)),
                ('contact_data', models.CharField(blank=True, max_length=1024)),
                ('origin', models.CharField(blank=True, max_length=1024)),
                ('origin_checked', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, max_length=1024)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refugees', to='refugeerouter.group')),
            ],
            options={
                'ordering': ['last_name'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='contact_refugee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary_group', to='refugeerouter.refugee'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('state', models.CharField(choices=[('C', 'Closed'), ('F', 'Confirmed'), ('D', 'Denied'), ('I', 'Inhabited'), ('O', 'Open'), ('R', 'Requested')], default='O', max_length=1)),
                ('notes', models.TextField(blank=True, max_length=1024)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='refugeerouter.flat')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='refugeerouter.group')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=1024)),
                ('last_name', models.CharField(blank=True, max_length=1024)),
                ('nick_name', models.CharField(blank=True, max_length=1024)),
                ('contact_data', models.TextField(blank=True, max_length=1024)),
                ('languages', models.CharField(blank=True, max_length=1024)),
                ('num_seats', models.IntegerField(default=0)),
                ('is_notifier', models.BooleanField(default=False)),
                ('is_authority_supporters', models.BooleanField(default=False)),
                ('is_flat_owner', models.BooleanField(default=False)),
                ('is_dispatcher', models.BooleanField(default=False)),
                ('is_paramedic', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, max_length=1024)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
